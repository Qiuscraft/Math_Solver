0,```python\nfrom fractions import Fraction\n\ndef calculate_math_expression():\n    # 将小数转换为分数\n    num1 = Fraction('91.64')\n    num2 = Fraction('7.36')\n    num3 = Fraction('43.6')\n    num4 = Fraction('3.6')\n    \n    # 计算和乘差积\n    sum_val = num1 + num2\n    diff_val = num3 - num4\n    product_val = sum_val * diff_val\n    \n    # 输出最终结果\n    print(product_val)\n\ncalculate_math_expression()\n```
1,```python\nfrom fractions import Fraction\n\n# 定义变量\ntotal_books = Fraction(164)  # 总书数\nbooks_taken = Fraction(9)    # 从下层取出的书数\n\n# 设上层原有x本书，下层原有y本书\n# 根据题意，有以下两个方程：\n# x + y = 164\n# x - 9 = y + 9\n\n# 将第二个方程变形为 x - y = 18\n# 现在有两个方程：\n# x + y = 164\n# x - y = 18\n\n# 解方程组\n# 将两个方程相加得到 2x = 182\n# x = 91\n# 将x = 91代入x + y = 164得到 y = 73\n\nx = (total_books + books_taken) / 2\ny = total_books - x\n\n# 计算原来下层比上层多多少本书\ndifference = y - x\n\n# 输出结果\nprint(difference)\n```
2,"```python\nfrom fractions import Fraction\n\ndef main():\n    # 两个老师和30名同学，总人数\n    total_people = Fraction(2) + Fraction(30)\n    \n    # 每条船最多坐3人\n    max_people_per_boat = Fraction(3)\n    \n    # 计算至少需要多少条船\n    # 使用天花板函数来确保即使不满一条船的人也需要一条船\n    required_boats = -(-total_people // max_people_per_boat)\n    \n    # 输出最终结果\n    print(required_boats)\n\nif __name__ == ""__main__"":\n    main()\n```"
3,"```python\nfrom fractions import Fraction\n\n# 老师讲课用了1/5小时，小组合作用了2/15小时\nteacher_time = Fraction(1, 5)\ngroup_work_time = Fraction(2, 15)\n\n# 一节课35分钟，转换为小时\ntotal_time = Fraction(35, 60)\n\n# 计算学生做练习的时间\npractice_time = total_time - (teacher_time + group_work_time)\n\n# 输出最终结果\nprint(practice_time)\n```"
4,```python\nfrom fractions import Fraction\n\n# 定义每盒蛋糕的价格和总金额\nprice_per_box = Fraction('7.90')\ntotal_money = Fraction('50')\n\n# 计算最多可以买多少盒蛋糕\nmax_boxes = total_money // price_per_box\n\n# 输出最终结果\nprint(max_boxes)\n```
